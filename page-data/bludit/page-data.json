{
    "componentChunkName": "component---src-pages-bludit-index-js",
    "path": "/bludit/",
    "result": {"data":{"allBluditPages":{"edges":[{"node":{"id":"000f5915-2fb5-53f3-887e-3296beeed938","title":"Dual Pi-hole + Tailscale","coverImage":"https://pilab.dev/bl-content/uploads/pages/b2824f25debdfd4c320c3717545b05c8/dual-pi-holetailscale.png","permalink":"https://pilab.dev/dual-pi-hole-tailscale","content":"<p>This might be the perfect <a href=\"https://pi-hole.net/\">Pi-hole</a> setup!</p>\n<p>With this new setup I have redundancy for my DNS as well as the simplest VPN setup ever. Now when I am on the go not only can I access my home network with ease I am also able to take advantage of the ad blocking of <a href=\"https://pi-hole.net/\">Pi-hole</a>.</p>\n<p>Here are the basic steps to get things setup. There are more configuration steps available for each installation. Please check their websites for full details before proceeding.</p>\n<p><strong>Step 1:</strong></p>\n<p>Install <a href=\"https://pi-hole.net/\">Pi-hole</a> on two Raspberry Pis. </p>\n<pre><code>curl -sSL https://install.pi-hole.net | bash</code></pre>\n<p><strong>Step 2:</strong></p>\n<p>Install <a href=\"https://github.com/vmstan/gravity-sync\">Gravity Sync</a> on both Raspberry Pis.</p>\n<pre><code>curl -sSL https://gravity.vmstan.com | bash</code></pre>\n<p><strong>Step 3:</strong></p>\n<p>Run the first <a href=\"https://github.com/vmstan/gravity-sync\">Gravity Sync</a> from the Raspberry Pi that is fully configured with all your settings.</p>\n<pre><code>gravity-sync push</code></pre>\n<p><strong>Step 4:</strong></p>\n<p>Setup <a href=\"https://github.com/vmstan/gravity-sync\">Gravity Sync</a> automation on both Raspberry Pis.</p>\n<pre><code>gravity-sync auto</code></pre>\n<p><strong>Step 5:</strong></p>\n<p>Install <a href=\"https://tailscale.com/\">Tailscale</a> on both Raspberry Pis.</p>\n<pre><code>curl -fsSL https://tailscale.com/install.sh | sh</code></pre>\n<p><strong>Step 6:</strong></p>\n<p>Enable IPv6 forwarding on both Raspberry Pis.</p>\n<pre><code>echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p /etc/sysctl.conf</code></pre>\n<p><strong>Step 7:</strong></p>\n<p>Start <a href=\"https://tailscale.com/\">Tailscale</a> on both Raspberry Pis.</p>\n<pre><code>sudo tailscale up --advertise-exit-node --advertise-routes=192.168.1.0/24 --accept-dns=false</code></pre>\n<p><strong>Step 8:</strong></p>\n<p>Login to <a href=\"https://tailscale.com/\">Tailscale</a> and click the &quot;three dots&quot; menu next to the Machine entry for each <a href=\"https://pi-hole.net/\">Pi-hole</a>. Select &quot;Disable key expiry&quot; from the drop-down. Since the <a href=\"https://pi-hole.net/\">Pi-holes</a> are not directly exposed to the internet it is safe to not require re-authentication. Then select &quot;Edit route settings...&quot; from the same drop-down menu and enable both options. See image below.</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b2824f25debdfd4c320c3717545b05c8/tailscale-setup.png\" class=\"image-border\" /><br><br>\n</div>\n<p>Next copy the <a href=\"https://tailscale.com/\">Tailscale</a> IP address for each <a href=\"https://pi-hole.net/\">Pi-hole</a> and use them as the Global Nameservers on the DNS tab. Set them override local DNS. See image below.</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b2824f25debdfd4c320c3717545b05c8/tailscale-dns.png\" class=\"image-border\" /><br><br>\n</div>\n<p>Turn on MagicDNS on the DNS tab. This way the <a href=\"https://pi-hole.net/\">Pi-hole's</a> interfaces will work when on or off the Tailscale network using their hostnames.</p>\n<p><strong>Step 9:</strong></p>\n<p>Configure your router to use the <a href=\"https://pi-hole.net/\">Pi-hole's</a> local IP addresses for your DNS.</p>\n<p><strong>Step 10:</strong></p>\n<p>Install <a href=\"https://tailscale.com/\">Tailscale</a> on other devices such as your phone so you can connect to your <a href=\"https://tailscale.com/\">Tailscale</a> network.</p>\n<p>Thats it!</p>\n<p>Now you should have all your devices setup with ad blocking and VPN. Now when you are connected to your <a href=\"https://tailscale.com/\">Tailscale</a> network you will also get ad blocking even when you are not on your local network.</p>","tags":"","slug":"dual-pi-hole-tailscale"}},{"node":{"id":"3995e80f-d7a9-55bc-a43f-cd0cc42af903","title":"Node-RED Upgrades (v3)","coverImage":"https://pilab.dev/bl-content/uploads/pages/31d198e511566000181e6b03fd9c964c/node-red-upgrade.png","permalink":"https://pilab.dev/node-red-upgrades-v3","content":"<p>I noticed the other day that my <a href=\"node-red-twitter-bot\">Node-RED node</a> was in need of an update. So I ran the script provided in the <a href=\"https://nodered.org/docs/getting-started/raspberrypi\">Node-RED docs</a>. I expected it to run smoothly since it has always in the past. However, I received a message stating that the script couldn't update from v2 of Node-RED to v3 of Node-RED because I was  on Nodejs v12. </p>\n<h4><em>Note:</em></h4>\n<blockquote>\n<p>Before I did anything. I went to Node-RED in my browser and hit <code>alt-shift-P</code> and ensured that all nodes were updated to their latest version.</p>\n</blockquote>\n<p><br/></p>\n<h3>Here are the steps that I took to do the upgrade.</h3>\n<p><br/></p>\n<p><strong>1. Remove current installation of Nodejs:</strong></p>\n<pre><code>sudo apt remove nodejs</code></pre>\n<p><strong>2. Install Nodejs v14 (Node-RED recommends this version):</strong></p>\n<pre><code>sudo curl -sL https://deb.nodesource.com/setup_14.x | sudo -E bash -\nsudo apt-get install -y nodejs</code></pre>\n<p><strong>3. Run Node-RED install script:</strong></p>\n<pre><code>bash &lt;(curl -sL https://raw.githubusercontent.com/node-red/linux-installers/master/deb/update-nodejs-and-nodered)</code></pre>\n<p><strong>4. Start Node-RED:</strong></p>\n<pre><code>node-red-start --max-old-space-size=1024 </code></pre>\n<p>When I visited my newly upgrade Node-RED installation in my browser I was shocked to see that all my Flows were gone! I just had an empty default Flow. I was freaking out until I remembered that I had previously setup up <a href=\"http://nodered.org/docs/user-guide/projects/\">Projects</a> which allowed me to backup all my Flows and creds to GithHub.</p>\n<p>So I followed the <a href=\"http://nodered.org/docs/user-guide/projects/\">docs</a> and re-enabled <a href=\"http://nodered.org/docs/user-guide/projects/\">Projects</a>. I then went to my GitHub account and copied the <code>flows_noderedpi.json</code> and <code>flows_noderedpi_cred.json</code> to <code>~/.node-red</code> on my <a href=\"node-red-twitter-bot\">Node-RED node</a>. Once I restarted (<code>node-red-restart</code>) Node-RED everything was back in order and working. I made a few updates to take advantage of some of the new features in Node-RED and was able to easily push those changes to GitHub.</p>\n<p>I was so happy that I had setup <a href=\"http://nodered.org/docs/user-guide/projects/\">Projects</a>. It was a real life saver and kept me from losing a few years worth of work that I had put into my Node-RED setup. </p>","tags":"Raspberry Pi,Pi,Node-RED","slug":"node-red-upgrades-v3"}},{"node":{"id":"0094fd6a-5d8e-58fa-8e1e-20ab924de0c4","title":"Pi-hole Upgrades","coverImage":"https://pilab.dev/bl-content/uploads/pages/fcdb80d303d1fe7901dd6d939ebe87c3/pi-hole-upgrade2.png","permalink":"https://pilab.dev/pi-hole-upgrades","content":"<p>I recently stumbled across a nice <a href=\"https://pi-hole.net/\">Pi-hole</a> setup that provides a quick and easy way to deploy Pi-hole along with a <a href=\"https://grafana.com/\">Grafana</a> dashboard to collect metrics on your network.</p>\n<p>The project is simply called <a href=\"https://github.com/geerlingguy/internet-pi\">Internet Pi</a>. </p>\n<p>The instructions provided with the project worked without any issues. Now I have Pi-hole setup on a Pi 4 and also have a nice dashboard to keep up with my network speeds.</p>\n<p>I have also been playing with <a href=\"https://tailscale.com/\">Tailscale</a>, which is a zero config VPN. I thought it would be super cool if I could set things up so that when I am connected to my Tailscale network I could also take advantage of the Pi-hole ad blocking.</p>\n<p>After a bit of research I was able to get it all working.</p>\n<p>Once I had Pi-hole setup I installed Tailscale to the Raspberry Pi running Pi-hole using their simple <a href=\"https://tailscale.com/download\">install command</a>.</p>\n<p>After install I started up Tailscale with this command.</p>\n<pre><code>sudo tailscale up --advertise-routes=192.168.1.0/24 --accept-dns=false</code></pre>\n<p><strong>Note:</strong> You will need to change the command to match your networks subnet.</p>\n<p>After I started Tailscale up I got an error referring to <a href=\"https://tailscale.com/kb/1019/subnets/#setting-up-a-subnet-router\">IP forwarding</a>. I had to run the following commands to clear that up.</p>\n<pre><code>echo 'net.ipv4.ip_forward = 1' | sudo tee -a /etc/sysctl.conf\necho 'net.ipv6.conf.all.forwarding = 1' | sudo tee -a /etc/sysctl.conf\nsudo sysctl -p /etc/sysctl.conf</code></pre>\n<p>Then I logged into Tailscale and clicked the &quot;three dots&quot; menu next to the Machine entry for my Pi-hole. I selected &quot;Disable key expiry&quot; from the drop-down. Since the Pi-hole is not directly exposed to the internet it is safe to not require re-authentication. Then I selected &quot;Edit route settings...&quot; from the same drop-down menu and enabled the first option. See image below.</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/fcdb80d303d1fe7901dd6d939ebe87c3/tailscale-settings-route-updated-new.png\" class=\"image-border\" /><br><br>\n</div>\n<p>Next I copied the Tailscale IP address for my Pi-hole and used it as the Nameserver on the DNS tab. I set it to override local DNS. See image below.</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/fcdb80d303d1fe7901dd6d939ebe87c3/tailscale-dns.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I also turned on MagicDNS on the DNS tab so that my servers would be accessible via their hostnames when on the Tailscale network. This way the Pi-hole interface would work when I am on or off the Tailscale network when I use the Pi-hole's hostname.</p>\n<p>Now I have a Tailscale VPN setup that uses my Pi-hole. </p>\n<p>I installed the Tailscale Android app so now when I am away from my home network I can still access my servers as well as be protected from ads using my Pi-hole.</p>\n<p>I also like to use <a href=\"https://github.com/pi-hole/PADD\">PADD</a> to display my Pi-hole status on a monitor in my office. However, I noticed that it wouldn't work with this new setup. After a bit more research I found the answer. </p>\n<p>On the Pi-hole I ran the following to setup PADD.</p>\n<pre><code>mkdir -p /home/pi/padd &amp;&amp; cd padd &amp;&amp; wget -N https://raw.githubusercontent.com/pi-hole/PADD/master/padd.sh &amp;&amp; chmod +x padd.sh</code></pre>\n<p>Now that I had PADD setup I needed to update my Pi-hole configuration to use it.</p>\n<p>I had to add the following volume to the <code>pi-hole-docker-compose.yml.j2</code> file which is located at <code>/home/pi/internet-pi/templates/</code>.</p>\n<pre><code>- '${HOME}/padd:/padd'</code></pre>\n<p>I then ran the following command from inside the <code>internet-pi</code> directory per the project's instructions.</p>\n<pre><code>ansible-playbook main.yml</code></pre>\n<p>Next I added the following alias to my <code>.bash_aliases</code> file in the Pi-hole home directory.</p>\n<pre><code>alias padd=\"docker exec -it pihole bash /padd/padd.sh\"</code></pre>\n<p>Now I can use the <code>padd</code> command to startup PADD.</p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I originally had Tailscale setup to use Pi-hole as an Exit Node. I found that I was having issues resolving hostnames. I have updated the setup to not use the Pi-hole as the Exit Node. I still get the ad-blocking, and now the hostname resolution issues have been resolved.</em></p>\n<p><em>I started having odd issues where the internet speeds from the Pi 4 running Pi-hole would drop off significantly around 2am everyday. I have since moved back to Pi-hole's default installation.</em></p>\n<p>*Check out my new dual Pi-hole + Tailscale setup <a href=\"dual-pi-hole-tailscale\">here</a>.</p>\n</blockquote>","tags":"Raspberry Pi,Pi,Pi-hole","slug":"pi-hole-upgrades"}},{"node":{"id":"a2156072-c2a2-5447-8b09-3cdf4341fbb1","title":"OctoPrint Live Stream","coverImage":"https://pilab.dev/bl-content/uploads/pages/a6acaf597184568573ad9c2c2dcd35a0/3dpinter.jpg","permalink":"https://pilab.dev/octoprint-node-live-stream","content":"<p>I have finally gotten back to 3D Printing. Of course this means I need another live stream! </p>\n<div class=\"centered\">\n    <div style=\"display:none;\">This live stream is utilizing a Wyze Pan Cam with the RTSP firmware. I use Restreamer to push to YouTube Live. This stream will run 24/7. I also have another Wyze Cam v2 setup directly with OctoPrint that I will be using for timelapses and monitoring prints. I plan to start publishing the timelapses to my YouTube channel once I get things dialed in a bit.\n    </div>\n\n        <div class=\"iframe-container\" style=\"margin-bottom:25px;\">\n            <div id=\"player\"></div>\n        </div>\n        <script>\n        var tag = document.createElement('script');\n\n        tag.src = \"https://www.youtube.com/iframe_api\";\n        var firstScriptTag = document.getElementsByTagName('script')[0];\n        firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n        var player;\n        function onYouTubeIframeAPIReady() {\n            player = new YT.Player('player', {\n                width: '100%',\n                videoId: 'LD-SZU6As1k',\n                playerVars: { 'autoplay': 1, 'playsinline': 1, 'rel': 0, 'modestbranding': 1 },\n                events: {\n                    'onReady': onPlayerReady\n                }\n            });\n        }\n\n        function onPlayerReady(event) {\n             event.target.mute();\n            event.target.playVideo();\n        }\n    </script>\n</div>\n<p>This live stream is utilizing a Wyze Pan Cam with the RTSP firmware. I use <a href=\"restreamer\">Restreamer</a> to push to YouTube Live. This stream will run 24/7. I also have another Wyze Cam v2 setup directly with OctoPrint that I will be using for timelapses and monitoring prints. I plan to start publishing the timelapses to my YouTube channel once I get things dialed in a bit.</p>","tags":"live stream,3D printing","slug":"octoprint-node-live-stream"}},{"node":{"id":"f0fc240a-9346-5290-bb3e-650476f90808","title":"UbuntuCE Resurrected","coverImage":"https://pilab.dev/bl-content/uploads/pages/ad9fa4c4897cf959012c3604fefeda53/ubuntuce.png","permalink":"https://pilab.dev/ubuntuce-resurrected","content":"<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/ad9fa4c4897cf959012c3604fefeda53/ubuntuce-welcome-tab2.png\" class=\"image-border\" /><br><br>\n</div>\n<p>In 2004 I created Ubuntu Christian Edition (UbuntuCE). It started as an idea that I got from a satire distro called Jesux. I liked the idea of creating a distro that was based on one of the most popular Linux distros and have it pre-configured with Christian software. </p>\n<p>When I first started I had no idea what I was doing. In fact I was brand new to the world of Linux. However, I decided to go for it. The initial release caused quite a stir. I received a ton of backlash from people. Most of the people who didn't like the project objected to the concept of a Christian Linux distro. They really failed to understand the underlying concept that I was going for. There was also a lot of praise for the project. UbuntuCE was mentioned in several Linux magazines and even a few non-Linux ones.</p>\n<p>One of the features of UbuntuCE that got the most praise was the fact that it came with web content filtering pre-configured. Setting up a safe system for families can be very challenging. UbuntuCE tried to solve that.</p>\n<p>After several years my time became more limited with other projects on my plate. A few other folks jumped in and helped take up the mantle for a while, but ultimately UbuntuCE went dormant. I never let the site go down and always hoped to come back to it.</p>\n<p>Finally, after many years I have &quot;resurrected&quot; UbuntuCE. The concept is the same. I have based the latest release, code named &quot;Lazarus&quot;, on Ubuntu 20.04 LTS. I have added additional Bible Study software from the available repositories. I have also created an UbuntuCE Repository to house the UbuntuCE specific packages that I have built. These include a welcome app, wallpapers, etc.</p>\n<p>The latest release still comes with web content filtering pre-configured. This time I have taken a different approach and am using a combination of <a href=\"https://cleanbrowsing.org/\">CleanBrowsing</a> DNS or <a href=\"https://www.opendns.com/setupguide/#familyshield\">OpenDNS Family Shield</a> which can easily be configured using <a href=\"https://github.com/jeremehancock/dnsminder#readme\">DNS Minder</a>, and a new application that I built called <a href=\"https://github.com/mhancoc7/hostminder#readme\">Host Minder</a> that automatically blocks websites based on your preferred Protection Level.</p>\n<p>If you are interested you can check it out at <a href=\"https://ubuntuce.com\">UbuntuCE.com</a></p>","tags":"Ubuntu,UbuntuCE,Linux","slug":"ubuntuce-resurrected"}},{"node":{"id":"c8b0f39f-745b-5fc2-b050-25002900c4c8","title":"Pi Lab Upgrades","coverImage":"https://pilab.dev/bl-content/uploads/pages/8a019b2df8ce1f9067ac6b5319cdd3fc/pi-lab-upgraded.png","permalink":"https://pilab.dev/pi-lab-upgrades","content":"<p>It has been bothering me that the production nodes for Pi Lab were not the same specs so I have finally decided to do some upgrades. I also didn't like that the <a href=\"/fold-for-covid\">BOINC Node</a> only had 2GBs of RAM. So I also decided to re-organize things a bit.</p>\n<p><strong>So here is what has changed.</strong></p>\n<ul>\n<li>The <a href=\"/node-red-twitter-bot\">Node-Red Node</a> switched with the Load Balancer Node in the Pi Lab Web Cluster</li>\n<li>The two Pi 4 4GBs from the Pi Lab Web Cluster were swapped with the <a href=\"/fold-for-covid\">BOINC Node</a> and <a href=\"/restreamer\">Resteamer Node</a></li>\n<li>I purchased three new Pi 2GBs to replace three of the Pi 2s in the Pi Lab Web Cluster</li>\n</ul>\n<p>Now the Pi Lab Web Cluster is using all Pi 4 2GBs for all nodes</p>\n<p>I was very excited at how easy it was to move things around. I simply ran the following on each node before moving the SD card to ensure everything was the latest and greatest.</p>\n<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></pre>\n<p>Other than having to update some port forwards and what not for IP changes that was it. </p>\n<p>For more details checkout the <a href=\"/specs\">Current Specs</a>.</p>","tags":"Raspberry Pi,Pi","slug":"pi-lab-upgrades"}},{"node":{"id":"5d9d3b4d-f786-5786-9c3b-d1780241f3ed","title":"Gatsby + Bludit","coverImage":"https://pilab.dev/bl-content/uploads/pages/a8ba2bb7e4c479cba0ff43de0c29f940/gatsby-bludit.png","permalink":"https://pilab.dev/gatsby-bludit","content":"<p>Introducing the new <strong><code>gatsby-source-bludit</code></strong> npm package for <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>!</p>\n<p><a href=\"https://www.gatsbyjs.com/\">Gatsby</a>, is an open-source static website generator (SSG) that is based on the frontend development framework React and makes use of Webpack and GraphQL technology. It can be used to build static sites that are progressive web apps, follow the latest web standards, and optimized for speed and security.</p>\n<p>One of the really cool things about <a href=\"https://www.gatsbyjs.com/\">Gatsby</a> is the ability to utilize external APIs to pull in data. To allow this for <a href=\"https://bludit.com\">Bludit</a> I have created a new &quot;source&quot; plugin to allow anyone to easily pull in content from their <a href=\"https://bludit.com\">Bludit</a> site with ease.</p>\n<p>This requires the use of the <a href=\"https://docs.bludit.com/en/api/introduction\">Bludit API</a> to be activated.</p>\n<p>Hopefully this will be helpful to someone looking to leverage the power of Gatsby and Bludit.</p>\n<p><a href=\"https://github.com/jeremehancock/gatsby-source-bludit/blob/main/LICENSE\"><img src=\"https://img.shields.io/github/license/jeremehancock/gatsby-source-bludit?color=orange&amp;style=for-the-badge\" alt=\"GitHub license\" /></a>\n<a href=\"https://dumbprojects.com/bludit/\"><img src=\"https://img.shields.io/badge/Gatsby%20%2B%20Bludit-Demo-green?style=for-the-badge\" alt=\"demo\" /></a>\n<a href=\"https://www.npmjs.com/package/gatsby-source-bludit\"><img src=\"https://img.shields.io/npm/v/gatsby-source-bludit?label=NPM%20PACKAGE&amp;style=for-the-badge\" alt=\"npm\" /></a>\n<a href=\"https://www.gatsbyjs.com/\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=GATSBY&amp;color=blueviolet&amp;style=for-the-badge\" alt=\"gatsby\" /></a>\n<a href=\"https://www.bludit.com\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=BLUDIT&amp;color=black&amp;style=for-the-badge\" alt=\"bludit\" /></a></p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have made some improvements to the demo. It now has a much cleaner design and pulls more data including tags and a portion of the post content into the&quot;preview&quot; cards.</em></p>\n<p><em>The gatsby-source-bludit plugin now supports multiple Bludit API endpoints as well as the ability to set the number of items to return when using the &quot;pages&quot; endpoint.</em></p>\n</blockquote>","tags":"Bludit,Gatsby","slug":"gatsby-bludit"}},{"node":{"id":"14914d68-7ff5-5d23-8fba-5f2097322527","title":"OctoPrint Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint.png","permalink":"https://pilab.dev/octoprint-node","content":"<p>My wife and kids got me a new 3D printer for my Birthday! I have been wanting one for quite some time. It is an <a href=\"https://creality3d.shop/collections/3d-printer/products/creality3d-ender-3-pro-high-precision-3d-printer\">Ender 3 Pro</a>. I am really just getting into using it but one of the first things I was told to do was check out <a href=\"https://octoprint.org/\">OctoPrint</a>. </p>\n<blockquote>\n<p>So what is OctoPrint?</p>\n</blockquote>\n<p>It is described as <em>&quot;The snappy web interface for your 3D printer.&quot;</em>.  That doesn't begin to explain how great I think it is. It definitely does provide a web interface for your 3D printer, but it does so much more. It also provides the ability to run manual commands and even select from a very nice selection of plugins for a variety of tasks. It truly made a nice 3D printer a much more enjoyable piece of equipment.</p>\n<p>I have re-purposed my <a href=\"pi-lab-monitor-node\">Monitor Node</a> into my new OctoPi Node. </p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint-node.png\" class=\"image-border\" /><br><br>\n</div>\n<p>So far I have mostly printed <a href=\"http://www.3dbenchy.com/\">3DBenchies</a> trying to really get my print quality dialed in. I have one functional print under my belt that I am very happy with. I have had issues with my Roomba getting stuck under our coach. So I went looking on <a href=\"https://www.thingiverse.com\">Thingverse</a> and I found this <a href=\"https://www.thingiverse.com/thing:1756175\">Bumper Extension for Roomba</a>. It was for a different model and I had to do some scaling to make it large enough to keep my Roomba from going under the couch. So far it is working great!</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/roomba-mod.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I have added a new <a href=\"category/3d-printing\">3D Printing</a> category to the blog and I hope to be posting many more prints very soon.</p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have added the  <a href=\"octoprint-node-live-stream\">OctoPrint Node Live Stream</a></em>.</p>\n</blockquote>","tags":"Raspberry Pi,Pi,3D Printing","slug":"octoprint-node"}}]}},"pageContext":{}},
    "staticQueryHashes": []}