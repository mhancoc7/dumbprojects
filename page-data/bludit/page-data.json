{
    "componentChunkName": "component---src-pages-bludit-index-js",
    "path": "/bludit/",
    "result": {"data":{"allBluditPages":{"edges":[{"node":{"id":"f0fc240a-9346-5290-bb3e-650476f90808","title":"UbuntuCE Resurrected","coverImage":"https://pilab.dev/bl-content/uploads/pages/ad9fa4c4897cf959012c3604fefeda53/ubuntuce.png","permalink":"https://pilab.dev/ubuntuce-resurrected","content":"<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/ad9fa4c4897cf959012c3604fefeda53/ubuntuce-welcome-tab2.png\" class=\"image-border\" /><br><br>\n</div>\n<p>In 2004 I created Ubuntu Christian Edition (UbuntuCE). It started as an idea that I got from a satire distro called Jesux. I liked the idea of creating a distro that was based on one of the most popular Linux distros and have it pre-configured with Christian software. </p>\n<p>When I first started I had no idea what I was doing. In fact I was brand new to the world of Linux. However, I decided to go for it. The initial release caused quite a stir. I received a ton of backlash from people. Most of the people who didn't like the project objected to the concept of a Christian Linux distro. They really failed to understand the underlying concept that I was going for. There was also a lot of praise for the project. UbuntuCE was mentioned in several Linux magazines and even a few non-Linux ones.</p>\n<p>One of the features of UbuntuCE that got the most praise was the fact that it came with web content filtering pre-configured. Setting up a safe system for families can be very challenging. UbuntuCE tried to solve that.</p>\n<p>After several years my time became more limited with other projects on my plate. A few other folks jumped in and helped take up the mantle for a while, but ultimately UbuntuCE went dormant. I never let the site go down and always hoped to come back to it.</p>\n<p>Finally, after many years I have &quot;resurrected&quot; UbuntuCE. The concept is the same. I have based the latest release, code named &quot;Lazarus&quot;, on Ubuntu 20.04 LTS. I have added additional Bible Study software from the available repositories. I have also created an UbuntuCE Repository to house the UbuntuCE specific packages that I have built. These include a welcome app, wallpapers, etc.</p>\n<p>The latest release still comes with web content filtering pre-configured. This time I have taken a different approach and am using a combination of <a href=\"https://cleanbrowsing.org/\">CleanBrowsing</a> DNS or <a href=\"https://www.opendns.com/setupguide/#familyshield\">OpenDNS Family Shield</a> which can easily be configured using <a href=\"https://github.com/jeremehancock/dnsminder#readme\">DNS Minder</a>, and a new application that I built called <a href=\"https://github.com/mhancoc7/hostminder#readme\">Host Minder</a> that automatically blocks websites based on your preferred Protection Level.</p>\n<p>If you are interested you can check it out at <a href=\"https://ubuntuce.com\">UbuntuCE.com</a></p>","tags":"Ubuntu,UbuntuCE,Linux","slug":"ubuntuce-resurrected"}},{"node":{"id":"c8b0f39f-745b-5fc2-b050-25002900c4c8","title":"Pi Lab Upgrades","coverImage":"https://pilab.dev/bl-content/uploads/pages/8a019b2df8ce1f9067ac6b5319cdd3fc/pi-lab-upgraded.png","permalink":"https://pilab.dev/pi-lab-upgrades","content":"<p>It has been bothering me that the production nodes for Pi Lab were not the same specs so I have finally decided to do some upgrades. I also didn't like that the <a href=\"/fold-for-covid\">BOINC Node</a> only had 2GBs of RAM. So I also decided to re-organize things a bit.</p>\n<p><strong>So here is what has changed.</strong></p>\n<ul>\n<li>The <a href=\"/node-red-twitter-bot\">Node-Red Node</a> switched with the Load Balancer Node in the Pi Lab Web Cluster</li>\n<li>The two Pi 4 4GBs from the Pi Lab Web Cluster were swapped with the <a href=\"/fold-for-covid\">BOINC Node</a> and <a href=\"/restreamer\">Resteamer Node</a></li>\n<li>I purchased three new Pi 2GBs to replace three of the Pi 2s in the Pi Lab Web Cluster</li>\n</ul>\n<p>Now the Pi Lab Web Cluster is using all Pi 4 2GBs for all nodes</p>\n<p>I was very excited at how easy it was to move things around. I simply ran the following on each node before moving the SD card to ensure everything was the latest and greatest.</p>\n<pre><code>sudo apt update &amp;&amp; sudo apt upgrade -y</code></pre>\n<p>Other than having to update some port forwards and what not for IP changes that was it. </p>\n<p>For more details checkout the <a href=\"/specs\">Current Specs</a>.</p>","tags":"Raspberry Pi,Pi","slug":"pi-lab-upgrades"}},{"node":{"id":"5d9d3b4d-f786-5786-9c3b-d1780241f3ed","title":"Gatsby + Bludit","coverImage":"https://pilab.dev/bl-content/uploads/pages/a8ba2bb7e4c479cba0ff43de0c29f940/gatsby-bludit.png","permalink":"https://pilab.dev/gatsby-bludit","content":"<p>Introducing the new <strong><code>gatsby-source-bludit</code></strong> npm package for <a href=\"https://www.gatsbyjs.com/\">Gatsby</a>!</p>\n<p><a href=\"https://www.gatsbyjs.com/\">Gatsby</a>, is an open-source static website generator (SSG) that is based on the frontend development framework React and makes use of Webpack and GraphQL technology. It can be used to build static sites that are progressive web apps, follow the latest web standards, and optimized for speed and security.</p>\n<p>One of the really cool things about <a href=\"https://www.gatsbyjs.com/\">Gatsby</a> is the ability to utilize external APIs to pull in data. To allow this for <a href=\"https://bludit.com\">Bludit</a> I have created a new &quot;source&quot; plugin to allow anyone to easily pull in content from their <a href=\"https://bludit.com\">Bludit</a> site with ease.</p>\n<p>This requires the use of the <a href=\"https://docs.bludit.com/en/api/introduction\">Bludit API</a> to be activated.</p>\n<p>Hopefully this will be helpful to someone looking to leverage the power of Gatsby and Bludit.</p>\n<p><a href=\"https://github.com/jeremehancock/gatsby-source-bludit/blob/main/LICENSE\"><img src=\"https://img.shields.io/github/license/jeremehancock/gatsby-source-bludit?color=orange&amp;style=for-the-badge\" alt=\"GitHub license\" /></a>\n<a href=\"https://dumbprojects.com/bludit/\"><img src=\"https://img.shields.io/badge/Gatsby%20%2B%20Bludit-Demo-green?style=for-the-badge\" alt=\"demo\" /></a>\n<a href=\"https://www.npmjs.com/package/gatsby-source-bludit\"><img src=\"https://img.shields.io/npm/v/gatsby-source-bludit?label=NPM%20PACKAGE&amp;style=for-the-badge\" alt=\"npm\" /></a>\n<a href=\"https://www.gatsbyjs.com/\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=GATSBY&amp;color=blueviolet&amp;style=for-the-badge\" alt=\"gatsby\" /></a>\n<a href=\"https://www.bludit.com\"><img src=\"https://img.shields.io/static/v1?label=TRY&amp;message=BLUDIT&amp;color=black&amp;style=for-the-badge\" alt=\"bludit\" /></a></p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have made some improvements to the demo. It now has a much cleaner design and pulls more data including tags and a portion of the post content into the&quot;preview&quot; cards.</em></p>\n<p><em>The gatsby-source-bludit plugin now supports multiple Bludit API endpoints as well as the ability to set the number of items to return when using the &quot;pages&quot; endpoint.</em></p>\n</blockquote>","tags":"Bludit,Gatsby","slug":"gatsby-bludit"}},{"node":{"id":"14914d68-7ff5-5d23-8fba-5f2097322527","title":"OctoPrint Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint.png","permalink":"https://pilab.dev/octoprint-node","content":"<p>My wife and kids got me a new 3D printer for my Birthday! I have been wanting one for quite some time. It is an <a href=\"https://creality3d.shop/collections/3d-printer/products/creality3d-ender-3-pro-high-precision-3d-printer\">Ender 3 Pro</a>. I am really just getting into using it but one of the first things I was told to do was check out <a href=\"https://octoprint.org/\">OctoPrint</a>. </p>\n<blockquote>\n<p>So what is OctoPrint?</p>\n</blockquote>\n<p>It is described as <em>&quot;The snappy web interface for your 3D printer.&quot;</em>.  That doesn't begin to explain how great I think it is. It definitely does provide a web interface for your 3D printer, but it does so much more. It also provides the ability to run manual commands and even select from a very nice selection of plugins for a variety of tasks. It truly made a nice 3D printer a much more enjoyable piece of equipment.</p>\n<p>I have re-purposed my <a href=\"pi-lab-monitor-node\">Monitor Node</a> into my new OctoPi Node. </p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/octoprint-node.png\" class=\"image-border\" /><br><br>\n</div>\n<p>So far I have mostly printed <a href=\"http://www.3dbenchy.com/\">3DBenchies</a> trying to really get my print quality dialed in. I have one functional print under my belt that I am very happy with. I have had issues with my Roomba getting stuck under our coach. So I went looking on <a href=\"https://www.thingiverse.com\">Thingverse</a> and I found this <a href=\"https://www.thingiverse.com/thing:1756175\">Bumper Extension for Roomba</a>. It was for a different model and I had to do some scaling to make it large enough to keep my Roomba from going under the couch. So far it is working great!</p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/b488323d86f5d481bf4bac8f975a2ca3/roomba-mod.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I have added a new <a href=\"category/3d-printing\">3D Printing</a> category to the blog and I hope to be posting many more prints very soon.</p>","tags":"Raspberry Pi,Pi,3D Printing","slug":"octoprint-node"}},{"node":{"id":"dd577452-384a-551e-b308-e7a31af4aacf","title":"Roadside America","coverImage":"https://pilab.dev/bl-content/uploads/pages/autosave-6968c1c0dfc10df31f7685952c0cf488/roadside-america.png","permalink":"https://pilab.dev/roadside-america","content":"<p>A little over a year ago I saw a Reddit post about the <a href=\"https://www.loc.gov/free-to-use/john-margolies-roadside-america-photograph-archive\">John Margolies Roadside America Photograph Archive</a>. The photos were taken between 1968 and 2008 and feature various roadside attractions in the United States. </p>\n<p>My first thought was I should build some sort of API to allow someone to easily use these photos on a website. So I built out a very simple API of sorts and set it up here, <a href=\"https://roadside-america.dumbprojects.com/\">Roadside America API</a>.</p>\n<p>I started tweeting the pictures on my personal Twitter account and people seemed to like them. So I have setup a Roadside America Twitter account and new site to allow people to get a random picture from the archive wiith its description every hour.</p>\n<p>Check it out here:</p>\n<p><a href=\"https://twitter.com/RdSd_America_US\">@RdSd_America_US</a> &amp; <a href=\"https://roadsideamerica.us/\">RoadsideAmerica.us</a></p>","tags":"Roadside America,Twitter","slug":"roadside-america"}},{"node":{"id":"fbdf2bb1-f154-597e-9080-c499ac9e73d3","title":"Restreamer Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/241c4852179f57be27536866df35d4ae/restreamer-icon.png","permalink":"https://pilab.dev/restreamer","content":"<p>Recently I have been working on setting up a live stream for my son's pet Leopard Gecko. We originally set it up a year or so ago using an old Android phone using <a href=\"https://www.youtube.com/live\">YouTube live streaming</a>. However, YouTube changed the requirements for this method. They now require that your channel has over 1000 subscribers. After that change we attempted to use <a href=\"https://play.google.com/store/apps/details?id=com.pas.webcam.pro&amp;hl=en_US\">IP Web Cam Pro</a> also on an old Android phone. This worked pretty well, however, the phone's battery would die after a few hours even though it was plugged in.</p>\n<p>I finally decided to purchase some low end IP cameras and give those a shot. I found a two pack of <a href=\"https://www.amazon.com/Wyze-Indoor-Wireless-Camera-Vision/dp/B07G2YR23M/\">Wyze Cams</a>. I was hoping that they would have the ability to view the steam via a browser on my local network. I could then simply setup a reverse proxy on the Pi Lab load balancer and share it. Unfortunately that was not the case. </p>\n<p>After some research I found that <a href=\"https://wyze.com/\">Wyze</a> has a <a href=\"https://support.wyzecam.com/hc/en-us/articles/360026245231-Wyze-Cam-RTSP\">beta firmware</a> that provides the ability to stream via RTSP. The installation is fairly straight forward. Simply have to copy a file to an SD card and follow a few steps. This gives an extra advanced option to create an RTSP URL to allow streaming outside the app.</p>\n<p>Now that I had that I needed a way to use that stream to embed the streams on a website which was the original goal for my son's Gecko stream.</p>\n<p>This is where the new Pi Lab Restreamer Node comes in. I have setup a Raspberry Pi 4 Model B 2GB with <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>. Restreamer is a software which allows for free real-time video streaming, e.g. transferring video signals of webcams or other video-inputs directly to your website. </p>\n<p>The setup for this was so easy! It allowed me to setup local stream URLs that I can use with a reverse proxy entry on the Pi Lab Load Balancer. It also allows me to easily push the streams to <a href=\"https://www.youtube.com/\">YouTube</a> which is what I have elected to do. </p>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/241c4852179f57be27536866df35d4ae/restreamer.png\" class=\"image-border\" /><br><br>\n</div>\n<p><strong>Here are the streams that we have setup so far.</strong></p>\n<ul>\n<li><a href=\"https://www.youtube.com/watch?v=hn_3fYmSo0A\">Pi Lab Live Stream</a></li>\n<li><a href=\"https://tortoisecam.com\">Tortoise Cam (Russian Tortoise)</a></li>\n</ul>\n<p>So far things are working very well. I have all the streams setup to not do any additional encoding in <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>. I found that this was not very helpful with my lower end cameras and was only causing high CPU usage. I am seeing about 3-4 Mbps upload usage on my network which I am going to keep a close eye on.</p>\n<p>The main issue that I have had is with <a href=\"https://www.youtube.com/\">YouTube</a> stopping the streams after 12 hours. This is mainly frustrating because it breaks the embed codes for the streams since the stream URL will change when I re-establish the stream. It is even odder that the <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> hasn't stopped after over 2 days of streaming, but the others stop everyday right at 12 hours. I am not sure if the AT&amp;T Digital Life security camera that is used for the <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> somehow has an affect. </p>\n<p>If you are looking to get into running a live stream for something like a pet definitely take a look at <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a>!</p>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I have managed to get the <a href=\"https://www.youtube.com/\">YouTube</a> live streams to not stop after 12 hours. Apparently if you use the &quot;Schedule Stream&quot; option it allows you to stream past the 12 hour mark. The <a href=\"pi-lab-live-stream\">Pi Lab Live Stream</a> was setup this way during the initial setup which is why it hadn't stopped. I have now set them all up this way.</em></p>\n<p><em>I have updated my tortoise cam with its own URL, <a href=\"https://tortoisecam.com\">TortoiseCam.com</a>. <del>It is setup to use <a href=\"https://www.earthcam.com/\">EarthCam</a> which it turns out <a href=\"https://datarhei.github.io/restreamer/\">Restreamer</a> also works with.</del></em></p>\n<p><em>I have updated the <a href=\"https://tortoisecam.com\">TortoiseCam.com</a> site to use <a href=\"https://www.youtube.com/\">YouTube</a> since I noticed <a href=\"https://www.earthcam.com/\">EarthCam</a> uses ugly ads that seemed sketchy.</em></p>\n<p><em>I have continued to have issues with <a href=\"https://www.youtube.com/\">YouTube</a> ending the tortoise cam stream. So I have gone back to <a href=\"https://www.earthcam.com/\">EarthCam</a>. To get around the sketchy ads in the <a href=\"https://www.earthcam.com/\">EarthCam</a> embed I have setup a scraper to grab the m3u8 file directly for <a href=\"https://tortoisecam.com\">TortoiseCam.com</a>.</em></p>\n<p><em>I have upgraded the Restreamer Node to a <a href=\"https://deviwiki.com/wiki/RPF_Raspberry_Pi_4_Model_B_4GB\">Raspberry Pi 4 Model B (4GB)</a>.</em></p>\n</blockquote>","tags":"Raspberry Pi,Pi,Restreamer","slug":"restreamer"}},{"node":{"id":"b5101c26-193e-54a7-93fe-2c2736780f70","title":"Pi Lab Monitor Node","coverImage":"https://pilab.dev/bl-content/uploads/pages/afc7a527f2b1d3dac643a3a2567b279f/pi-lab-monitor.png","permalink":"https://pilab.dev/pi-lab-monitor-node","content":"<p>I have added a new node to Pi Lab to provide a screen. I have it setup to cycle through the <a href=\"https://grafana.com/\">Grafana</a> interface from the <a href=\"prometheus-grafana\">Prometheus Node</a>.</p>\n<p>I had an older <a href=\"https://wiki.52pi.com/index.php/5-Inch-800x480-HDMI-GPIO-Touch-Screen_SKU:EP-0072\">LCD screen</a> that I bought several years ago. I haven't been able to get the touch screen working yet, but not sure I really need it.</p>\n<h3>Check it out!</h3>\n<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/afc7a527f2b1d3dac643a3a2567b279f/pi-lab-monitor-large.png\" class=\"image-border\" /><br><br>\n</div>\n<p><strong>Updates:</strong></p>\n<blockquote>\n<p><em>I started having issues with the resolution of the LCD screen.  I have updated the screen to an old 22 inch Dell monitor. </em></p>\n<p><em>I have re-purposed the Monitor Node into the <a href=\"octoprint-node\">OctoPrint Node</a>. I now have my dashbard displayed using my Plex Node. </em></p>\n</blockquote>","tags":"Raspberry Pi,Pi","slug":"pi-lab-monitor-node"}},{"node":{"id":"8ef9c719-5ef0-5d08-926c-9852f7954a9d","title":"New Pi Lab Media Nodes","coverImage":"https://pilab.dev/bl-content/uploads/pages/63d64ed2633a1938cd79e877208f471f/media-drive.png","permalink":"https://pilab.dev/new-pi-lab-media-nodes","content":"<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/63d64ed2633a1938cd79e877208f471f/media-nodes-stacked.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I was recently going through a box of old tech that I have held on to over the years. I am across two <a href=\"https://www.amazon.com/SanDisk-Wireless-Smartphones-Tablets-SDWS1-032G-A57/dp/B00DR8LBAK\">SanDisk Media Drives</a> that I purchased for next to nothing on a clearance aisle at Target many years back. I had previously used these for their intended purpose. While traveling I would set them up with movies so we could watch when we otherwise didn't have easy access to streaming. Like I said I have had them for a while.</p>\n<p>I have always wondered if I could use them for something more. So I plugged them in and got to looking. I quickly realized that I could access the files via the device's IP address. This meant that I could easily setup a reverse proxy using the Pi Lab load balancer to serve the content on these devices outside my local network. </p>\n<p>As I began to look more closely at the devices I found a few snags. First off the FTP access to the devices was completely open. So anyone on my network could anonymously FTP into the device and have full read/write access to the files that I would be serving. The devices also had a web interface that allowed that same level of access.</p>\n<p>After some digging I found a few posts online that discussed these very issues. As it turns out the devices run an embedded Linux OS. They do not provide <code>SSH</code> access, but they do provide <code>telnet</code> access. Which gave me enough access to get started. I was able to find the <code>root</code> password on one of the forum posts. The person who posted it had used <a href=\"https://www.openwall.com/john/\">John the Ripper</a> password cracker to crack the password. </p>\n<p>Now I was able to update the <code>root</code> password and gain write access to the entire device. I was able to track down the needed changes to not allow anonymous FTP access and I completely removed the web interface as I will not be using it. I also made backups of all the files used when setting up the WiFi creds for the devices. That way in the future I will not even need to use the SanDisk app for setting that up.</p>\n<p>I added 32GB SD cards to each device which gives me 64GBs on each drive. One really cool thing is these devices can actually host static HTML/JS sites. That is what the web interface was using.</p>\n<p>I have setup a GitHub repo to document the steps I took to set things up. Check it out <a href=\"https://github.com/mhancoc7/sandisk-media-drive-32gb-mods\">here</a>.</p>\n<p>I am not sure what I plan to use them for, but I have setup a simple &quot;application&quot; that I think is fun. I have another project called the <a href=\"https://roadside-america.dumbprojects.com/\">Roadside America API</a>. It provides a simple API to retrieve images and metadata from the <a href=\"https://www.loc.gov/free-to-use/john-margolies-roadside-america-photograph-archive\">John Margolies Roadside America Photograph Archive</a>. </p>\n<p>I used the API to download all of the images to one of the media drives. Then I setup a webpage that redirects to a random image from the collection.</p>\n<h3>Usage</h3>\n<pre><code>https://pilab.dev/roadside-america-collection?size=large</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=medium</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=small</code></pre>\n<h3>Try it: <a href=\"https://pilab.dev/roadside-america-collection\" target=\"_blank\">Click Here</a></h3>\n<hr />\n<p><strong><em>Note:</em></strong> <em>If you don't provide a size, it will default to large.</em></p>","tags":"SanDisk","slug":"new-pi-lab-media-nodes"}}]}},"pageContext":{}},
    "staticQueryHashes": []}