{
    "componentChunkName": "component---src-templates-post-js",
    "path": "/bludit/new-pi-lab-media-nodes",
    "result": {"data":{"allBluditPages":{"edges":[{"node":{"title":"New Pi Lab Media Nodes","content":"<div class=\"centered\">\n    <img src=\"/bl-content/uploads/pages/63d64ed2633a1938cd79e877208f471f/media-nodes-stacked.png\" class=\"image-border\" /><br><br>\n</div>\n<p>I was recently going through a box of old tech that I have held on to over the years. I am across two <a href=\"https://www.amazon.com/SanDisk-Wireless-Smartphones-Tablets-SDWS1-032G-A57/dp/B00DR8LBAK\">SanDisk Media Drives</a> that I purchased for next to nothing on a clearance aisle at Target many years back. I had previously used these for their intended purpose. While traveling I would set them up with movies so we could watch when we otherwise didn't have easy access to streaming. Like I said I have had them for a while.</p>\n<p>I have always wondered if I could use them for something more. So I plugged them in and got to looking. I quickly realized that I could access the files via the device's IP address. This meant that I could easily setup a reverse proxy using the Pi Lab load balancer to serve the content on these devices outside my local network. </p>\n<p>As I began to look more closely at the devices I found a few snags. First off the FTP access to the devices was completely open. So anyone on my network could anonymously FTP into the device and have full read/write access to the files that I would be serving. The devices also had a web interface that allowed that same level of access.</p>\n<p>After some digging I found a few posts online that discussed these very issues. As it turns out the devices run an embedded Linux OS. They do not provide <code>SSH</code> access, but they do provide <code>telnet</code> access. Which gave me enough access to get started. I was able to find the <code>root</code> password on one of the forum posts. The person who posted it had used <a href=\"https://www.openwall.com/john/\">John the Ripper</a> password cracker to crack the password. </p>\n<p>Now I was able to update the <code>root</code> password and gain write access to the entire device. I was able to track down the needed changes to not allow anonymous FTP access and I completely removed the web interface as I will not be using it. I also made backups of all the files used when setting up the WiFi creds for the devices. That way in the future I will not even need to use the SanDisk app for setting that up.</p>\n<p>I added 32GB SD cards to each device which gives me 64GBs on each drive. One really cool thing is these devices can actually host static HTML/JS sites. That is what the web interface was using.</p>\n<p>I have setup a GitHub repo to document the steps I took to set things up. Check it out <a href=\"https://github.com/mhancoc7/sandisk-media-drive-32gb-mods\">here</a>.</p>\n<p>I am not sure what I plan to use them for, but I have setup a simple &quot;application&quot; that I think is fun. I have another project called the <a href=\"https://roadside-america.dumbprojects.com/\">Roadside America API</a>. It provides a simple API to retrieve images and metadata from the <a href=\"https://www.loc.gov/free-to-use/john-margolies-roadside-america-photograph-archive\">John Margolies Roadside America Photograph Archive</a>. </p>\n<p>I used the API to download all of the images to one of the media drives. Then I setup a webpage that redirects to a random image from the collection.</p>\n<h3>Usage</h3>\n<pre><code>https://pilab.dev/roadside-america-collection?size=large</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=medium</code></pre>\n<pre><code>https://pilab.dev/roadside-america-collection?size=small</code></pre>\n<h3>Try it: <a href=\"https://pilab.dev/roadside-america-collection\" target=\"_blank\">Click Here</a></h3>\n<hr />\n<p><strong><em>Note:</em></strong> <em>If you don't provide a size, it will default to large.</em></p>"}}]}},"pageContext":{"slug":"new-pi-lab-media-nodes"}},
    "staticQueryHashes": []}